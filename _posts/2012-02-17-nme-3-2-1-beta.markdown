---
layout: post
status: publish
published: true
title: NME 3.2.1 Beta
author: admin
author_login: admin
author_email: joshua@joshuagranick.com
wordpress_id: 73
wordpress_url: http://www.haxenme.org/blog/?p=73
date: 2012-02-17 19:41:29.000000000 -08:00
---
Earlier this week, NME 3.2 was released. NME 3.2 added built-in SWF asset support, brought new APIs, improved the NMML project format, support for extensions and continued our support for devices and platforms.

While 3.2 was a feature release, 3.2.1 will be a stability and toolchain update.

Android builds have been updated to use the recently released Android NDK r7b. You will be able to update your copy of the NDK easily by running "nme setup android" after upgrading.

iOS builds have been updated to compile for the ARMv7 processor architecture instead of ARMv6. For performance and simplicity, we are not supporting universal packages at this time. This change also moves the minimum OS version from iOS 3.0 to 4.3.

It has become increasingly difficult to avoid making ARMv7 builds because of Apple's changes to XCode and submission policies for the App Store. While we are also considering a move to OpenGL ES 2.0 in the not-so-distant future, we would need to begin supporting only ARMv7 or newer devices (many ARMv6 devices do not support GLES 2.0).&nbsp;To keep build times low, to maintain our current build process and for these reasons, making a move to ARMv7 for iOS has seemed to make the most sense.

This also means that if you use iOS 4.x or 5.x features in your application, such as through an NME extension, you will not need to create ARMv7 libraries yourself.

Version 1.08 of the SWF library was recently released, adding initial support for buttons. This update for NME improves our generation of SWF classes to create both MovieClip and SimpleButton classes automatically, and addresses API changes which took place because of the upgrade.

The waxe library has been posted to haxelib, and this version of NME resolves some minor issues which prevented you from compiling certain kinds of projects using the NME command-line tools. Believe it or not, the NME command-line tools do not require that you build an NME application. If <haxelib name="nme" &#47;> is included in your waxe project, NME will create an NME window (like normal) but you will be able to access additional UI elements like dialogs, windows, panels and buttons. On the the other hand, if the NME haxelib is not included in your NMML, you will be able to configure your own native OS window yourself.

We will be talking about waxe more in the future, and exploring how NME and waxe can continue to work together to improve application development.
<h2>Download<&#47;h2>
<ul>
	<li><a href="http:&#47;&#47;www.haxenme.org&#47;files&#47;8313&#47;2950&#47;5098&#47;NME-3.2.1-Windows.exe">Windows<&#47;a> (EXE -- 12.1 MB)<&#47;li>
	<li><a href="http:&#47;&#47;www.haxenme.org&#47;files&#47;2213&#47;2950&#47;5498&#47;NME-3.2.1-Mac.zip">Mac<&#47;a> (PKG -- 18.9 MB)<&#47;li>
	<li><a href="http:&#47;&#47;www.haxenme.org&#47;files&#47;8313&#47;2950&#47;5408&#47;NME-3.2.1-Linux.tar.gz">Linux<&#47;a> (SH -- 1 KB)<&#47;li>
<&#47;ul>
<em>If you&nbsp;would prefer&nbsp;to install packages manually, you can download this version of <a href="http:&#47;&#47;www.haxenme.org&#47;files&#47;8413&#47;2950&#47;5137&#47;nme-321.zip">NME<&#47;a> and <a href="http:&#47;&#47;www.haxenme.org&#47;files&#47;7913&#47;2950&#47;5114&#47;hxcpp-2082.zip">HXCPP<&#47;a>, and install from a command-line or terminal using the "haxelib test" command<&#47;em>
